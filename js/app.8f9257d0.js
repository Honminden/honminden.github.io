(function(n){function r(r){for(var t,o,c=r[0],s=r[1],l=r[2],u=0,p=[];u<c.length;u++)o=c[u],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&p.push(a[o][0]),a[o]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(n[t]=s[t]);d&&d(r);while(p.length)p.shift()();return i.push.apply(i,l||[]),e()}function e(){for(var n,r=0;r<i.length;r++){for(var e=i[r],t=!0,c=1;c<e.length;c++){var s=e[c];0!==a[s]&&(t=!1)}t&&(i.splice(r--,1),n=o(o.s=e[0]))}return n}var t={},a={app:0},i=[];function o(r){if(t[r])return t[r].exports;var e=t[r]={i:r,l:!1,exports:{}};return n[r].call(e.exports,e,e.exports,o),e.l=!0,e.exports}o.m=n,o.c=t,o.d=function(n,r,e){o.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:e})},o.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,r){if(1&r&&(n=o(n)),8&r)return n;if(4&r&&"object"===typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(o.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var t in n)o.d(e,t,function(r){return n[r]}.bind(null,t));return e},o.n=function(n){var r=n&&n.__esModule?function(){return n["default"]}:function(){return n};return o.d(r,"a",r),r},o.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},o.p="/";var c=window["webpackJsonp"]=window["webpackJsonp"]||[],s=c.push.bind(c);c.push=r,c=c.slice();for(var l=0;l<c.length;l++)r(c[l]);var d=s;i.push([0,"chunk-vendors"]),e()})({0:function(n,r,e){n.exports=e("56d7")},"239f":function(n,r,e){"use strict";e("ba49")},"56d7":function(n,r,e){"use strict";e.r(r);var t={};e.r(t),e.d(t,"article0",(function(){return U})),e.d(t,"article1",(function(){return R})),e.d(t,"article2",(function(){return J})),e.d(t,"article3",(function(){return X})),e.d(t,"article4",(function(){return K})),e.d(t,"news90000",(function(){return Y})),e.d(t,"articles",(function(){return V})),e.d(t,"news",(function(){return $}));e("e260"),e("e6cf"),e("cca6"),e("a79d");var a=e("7a23"),i=(e("ab8b"),e("9537"),e("3e48"),{id:"app"}),o={class:"content"};function c(n,r,e,t,c,s){var l=Object(a["w"])("TopBar"),d=Object(a["w"])("router-view");return Object(a["p"])(),Object(a["d"])("div",i,[Object(a["g"])(l),Object(a["g"])("div",o,[Object(a["g"])(d)])])}e("9911");var s=Object(a["B"])("data-v-6aedce71");Object(a["s"])("data-v-6aedce71");var l={class:"topBar mb-5"},d={class:"navbar navbar-expand-lg bg-light px-5 py-2"},u={class:"container-fluid"},p=Object(a["g"])("h1",null,"Honminden",-1);Object(a["q"])();var m=s((function(n,r,e,t,i,o){var c=Object(a["w"])("router-link");return Object(a["p"])(),Object(a["d"])("div",l,[Object(a["g"])("nav",d,[Object(a["g"])("div",u,[Object(a["g"])(c,{class:"navbar-brand",to:"/"},{default:s((function(){return[p]})),_:1}),(Object(a["p"])(!0),Object(a["d"])(a["a"],null,Object(a["v"])(i.items,(function(n,r){return Object(a["p"])(),Object(a["d"])("ul",{class:"navbar-nav",key:r},[Object(a["g"])("li",{class:"nav-item",id:n.id},[Object(a["g"])(c,{class:"nav-link",to:n.link},{default:s((function(){return[Object(a["f"])(Object(a["y"])(n.text),1)]})),_:2},1032,["to"])],8,["id"])])})),128))])])])})),b={name:"TopBar",data:function(){return{items:[{id:"news",text:"News",link:"/articles/news"},{id:"articles",text:"Articles",link:"/articles/article"},{id:"lab",text:"Lab",link:"/lab"},{id:"about",text:"About",link:"/about"}]}}},h=(e("f402"),e("d959")),f=e.n(h);const g=f()(b,[["render",m],["__scopeId","data-v-6aedce71"]]);var v=g,w={name:"App",components:{TopBar:v}};e("d053");const j=f()(w,[["render",c]]);var O=j,y=e("6c02"),_={class:"front"};function T(n,r,e,t,i,o){return Object(a["p"])(),Object(a["d"])("div",_,[Object(a["g"])("h2",null,Object(a["y"])(i.welcomeTxt),1)])}var k={name:"FrontPage",data:function(){return{welcomeTxt:"Welcome to Honminden's homepage."}}};const S=f()(k,[["render",T]]);var x=S,M=(e("a4d3"),e("e01a"),e("99af"),Object(a["B"])("data-v-21e7ef4d"));Object(a["s"])("data-v-21e7ef4d");var A={class:"articles"},H={key:0},I={key:1},L={key:2,class:"my-2"},P={class:"card bg-light text-center m-4 p-4"},z={class:"card-title"},E={class:"card-subtitle text-muted"},N={class:"card-subtitle text-muted"},q={class:"card-subtitle text-muted"},B={class:"card-body"};Object(a["q"])();var C=M((function(n,r,e,t,i,o){var c=Object(a["w"])("router-link");return Object(a["p"])(),Object(a["d"])("div",A,["article"==e.category?(Object(a["p"])(),Object(a["d"])("h2",H,"Articles")):Object(a["e"])("",!0),"news"==e.category?(Object(a["p"])(),Object(a["d"])("h2",I,"News")):Object(a["e"])("",!0),null!=i.articleManager?(Object(a["p"])(),Object(a["d"])("div",L,[(Object(a["p"])(!0),Object(a["d"])(a["a"],null,Object(a["v"])(o.getMeta(),(function(n,r){return Object(a["p"])(),Object(a["d"])("div",{key:r},[Object(a["g"])("div",P,[Object(a["g"])("h3",z,Object(a["y"])(n.title),1),Object(a["g"])("p",E,"by "+Object(a["y"])(n.author),1),Object(a["g"])("p",N,"created on "+Object(a["y"])(n.createTime),1),Object(a["g"])("p",q,"edited on "+Object(a["y"])(n.editTime),1),Object(a["g"])("p",B,Object(a["y"])(n.description),1),Object(a["g"])(c,{to:"/markdownArticle/".concat(e.category,"/").concat(n.id),class:"stretched-link"},null,8,["to"])])])})),128))])):Object(a["e"])("",!0)])})),D=e("d4ec"),F=e("bee2"),G=e("339e"),W=e.n(G),U="# Hello\r\n> created: 2021.07.06\r\n---\r\n## hello everyone\r\nThis is from Honminden!",R="# Spring项目搭建踩坑经验\r\n\r\n总结一下从头开始搭建一个Spring项目过程中踩的一些坑和其它经验。\r\n\r\n---\r\n\r\n## 创建项目：Spring模板\r\n\r\n如果你用Intellij IDEA Ultimate这类集成了Spring的IDE，那么可以直接找到模板创建一个新项目。\r\n\r\n但如果你用的是Intellij IDEA CE（社区版）这种没有集成Spring的开发工具，那么就需要自己编写配置文件或者导入模板。\r\n\r\n这里推荐到官网的[spring initializer](https://start.spring.io/)下载模板。\r\n\r\n![spring initializer](/image/Spring210702/spring_initializer.png)\r\n\r\n这里可以进行各种配置，比如右边的依赖可以添加Spring Web（网络开发相关工具）以及Spring Boot Devtools（启用热部署），下面可以选JDK版本等等。\r\n\r\n---\r\n\r\n## 热部署：IDEA CE的Smart Tomcat插件\r\n\r\n如果你用的是Intellij IDEA Ultimate，那么可以直接进行热部署，不需要多花功夫。\r\n\r\n而当你用Intellij IDEA CE进行热部署时，则首先要下载Tomcat，之后需要在IDEA里下载一个叫做**Smart Tomcat**的插件，配置好就可以使用热部署了。\r\n\r\n---\r\n\r\n## 打包部署：war包部署的各种问题\r\n\r\n假设你已经写完了一个Web项目，需要打包部署到服务器上，有两种选择：使用jar包或者war包。\r\n\r\njar包的部署很简单，因为Spring Web已经内置了Tomcat，可以直接通过java -jar命令部署。\r\n\r\nwar包的部署就比较麻烦了。首先要修改配置，有两种办法：\r\n\r\n一、在项目开始时就确定要使用war包部署，那么可以直接在spring initializer里设置使用war包，导出的模板可以直接用于war包部署。\r\n\r\n二、假设一个使用jar包部署的项目临时要改成用war包部署，那么需要修改下面几项配置：\r\n1. 修改pom.xml，加入packaging行并加入一个provided的依赖（用来屏蔽内置Tomcat）\r\n```xml\r\n<groupId>com.honminden</groupId>\r\n<artifactId>demo01</artifactId>\r\n<version>0.0.1-SNAPSHOT</version>\r\n<name>demo01</name>\r\n<description>Demo project for Spring Boot</description>\r\n<properties>\r\n    <java.version>1.8</java.version>\r\n</properties>\r\n<packaging>war</packaging> \x3c!-- mvn package generates a war file --\x3e\r\n```\r\n```xml\r\n<dependency>\r\n    <groupId>org.springframework.boot</groupId>\r\n    <artifactId>spring-boot-starter-tomcat</artifactId>\r\n    <scope>provided</scope>\r\n</dependency>\r\n```\r\n2. 创建一个Initializer类，为Tomcat指定程序入口\r\n\r\nServletInitializer.java\r\n```java\r\npackage com.honminden.demo02;\r\n\r\nimport org.springframework.boot.builder.SpringApplicationBuilder;\r\nimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\r\n\r\npublic class ServletInitializer extends SpringBootServletInitializer {\r\n\r\n\t@Override\r\n\tprotected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\r\n\t\treturn application.sources(Demo02Application.class);\r\n\t}\r\n\r\n}\r\n```\r\n之后将导出的war包放在Tomcat的webapps目录下即可\r\n\r\n### 一个大坑：目前不要使用Tomcat 10\r\n\r\n之前我部署war包后发现报错404，很长时间都没找到原因，后来终于发现是因为Tomcat的版本问题。似乎Tomcat 10并不兼容当前的Spring（至少到2021.07.02依然如此），建议暂时先使用Tomcat 9来部署war包。",J='# 如何搭建一个简单的Markdown博客\r\n\r\nMarkdown是一种能让人轻松愉快写文章的格式，上手简单，而且有很多相关工具。对于我这种不想直接写HTML的人来说，如果能把md文件转换成HTML显示在博客网站上就会很方便，\r\n\r\n想要搭建一个Markdown博客，当然可以直接使用现有的工具，比如Github Pages官方推荐的Jekyll。不过，如果只需要一些简单的功能，则完全可以自己动手搭建，就像这个站点一样。\r\n\r\n这篇文章着重讲一下如何使用raw-loader和showdown来导入并转换HTML，不涉及如何将HTML显示在站点里。\r\n\r\n---\r\n\r\n## 使用raw-loader导入md文本\r\n\r\nraw-loader是一个以module形式直接将文本文件读取为字符串的工具。这个工具在webpack 5之后已经弃用了，被Asset Modules所取代，但我的站点保守起见先使用raw-loader一段时间再考虑迁移。\r\n\r\n首先安装raw-loader，如果用npm管理依赖的话脚本如下：\r\n\r\n```shell\r\nnpm install --save raw-loader\r\n```\r\n\r\n其它使用方式可以见[Github页面](https://github.com/webpack-contrib/raw-loader)\r\n\r\n之后不需要进行配置，使用方法很简单，在导入模块的url前加上`raw-loader!`。在我的项目里，我用一个hub模块导出所有md文件：\r\n\r\nmeta.js\r\n```javascript\r\nexport {default as article0} from "raw-loader!@/assets/Hello.md"\r\nexport {default as article1} from "raw-loader!@/assets/Spring210702/Spring210702.md"\r\n// ...\r\n```\r\n\r\n其它模块导入的这些md文件是字符串格式，比如：\r\n\r\n```javascript\r\nimport * as meta from "@/assets/meta"\r\nconsole.log(meta[\'article0\'])\r\n```\r\n\r\n控制台显示结果：\r\n```markdown\r\n# Hello\r\n> created: 2021.07.06\r\n---\r\n## hello everyone\r\nThis is from Honminden!\r\n```\r\n\r\n---\r\n\r\n## 使用showdown将md转换为HTML格式\r\n\r\nshowdown是一个将Markdown文本转换为HTML格式的转换器，虽然很久没有更新了，但也已经比较好用。\r\n\r\n可以直接用npm安装：\r\n\r\n```shell\r\nnpm install --save showdown\r\n```\r\n\r\n其它使用方式可以参考[Github页面](https://github.com/showdownjs/showdown)\r\n\r\n使用showdown很简单，先创建Converter对象，使用makeHtml函数转换字符串即可：\r\n\r\n```javascript\r\nconst markdown2HtmlConverter = new showdown.Converter();\r\nconsole.log(markdown2HtmlConverter.makeHtml(meta[\'article0\']))\r\n```\r\n\r\n控制台显示结果：\r\n```html\r\n<h1 id="hello">Hello</h1>\r\n<blockquote>\r\n  <h2 id="created20210706">created: 2021.07.06</h2>\r\n  <h2 id="helloeveryone">hello everyone</h2>\r\n  <p>This is from Honminden!</p>\r\n</blockquote>\r\n```\r\n\r\n接下来可以把这段HTML放在某个容器元素的里面，就可以在页面里显示出来了。\r\n\r\n```javascript\r\ndocument.getElementById("docContainer").innerHTML = this.articleManager.getMarkdownArticle(this.category, this.id);\r\n```\r\n\r\n---\r\n\r\n## 一些踩坑点\r\n\r\n### 注意引用图片的情况\r\n\r\n在md文件里，如果引用图片的URL是./格式的相对路径，那么在vue cli应用里可能会变成在当前网页路径下找文件；而如果这张图片在开发时跟md文件放在同一目录下，打包时根本就没有把这张图片包括进来，那就会找不到图片。\r\n\r\n有个简单的解决办法，就是把图片复制到public目录下面，然后修改md文件里图片的URL指向这个文件，比如/image/Spring210702/spring_initializer.png（注意没有.），这种办法虽然每次都要改链接，但在代码上不需要额外解决，算是一个便利办法。\r\n\r\n### 注意代码块格式\r\n\r\nshowdown默认输出的代码块是下面这种格式；\r\n\r\n```html\r\n<pre><code>somecode</code></pre>\r\n```\r\n\r\n默认样式是inline的，可以通过对pre code设置display: block改成块状。',X="# nuScenes数据集-通过命令行下载\r\n\r\n给服务器下nuScenes的时候发现命令行批量下载比较麻烦，因为网站需要先登录再手动点击下载，一个个获取链接复制到服务器命令行。于是自己写了个微型下载脚本（以及md5校验），以后在别的机器上下载方便很多了。\r\n\r\nrepo: [download-nuscenes](https://github.com/Honminden/download-nuscenes)\r\n\r\n当然token还是要手动复制，没有写自动登录部分（写了的话后面如果有人机验证也用不了了）。另外一些代码写的很糙，比如url后处理，不过能用就行。\r\n\r\nnuScenes官网：[nuScenes](https://nuscenes.org/)",K="# 使用Whisper开源模型提取会议记录\r\n\r\n过去一年多时间各种会议的录屏多达80G，想梳理之前的会议都要从几小时的视频里找信息，非常麻烦，如果能够自动生成会议记录，后面速览会议内容或者检索关键词会轻松很多。\r\n\r\n很多语音识别服务收费或者只能转换一小段，转大段视频的开销没法想象，因此对于有显卡且要求不高的人来说不如用开源模型自己做。笔者使用的Whisper是2022年9月OpenAI开源的语音识别模型，无需调整可以直接用于中文识别，十分方便。\r\n\r\ngithub链接：[openai/whisper](https://github.com/openai/whisper)\r\n\r\n## 代码编写\r\n\r\n首先需要根据官方指南进行环境配置，安装相关python库并下载配置好ffmpeg。如果使用显卡，则需要提前安装好cuda并最好安装相应版本的pytorch\r\n\r\n在导入模型时有两个问题：\r\n\r\n1. 选择什么规模的模型。笔者尝试使用tiny发现效果很差，而large效果较好，因此虽然对显存要求很高也最好直接使用large。笔者目前使用的模型版本是2022年12月发布的large-v2，估计开发人员将会继续更新large模型，可直接选择最新版本。\r\n2. 模型存储位置。large-v2模型文件大小为2.87GB，建议像视频一样存储到容量有空余的硬盘上，可以通过download_root参数设置存储目录。\r\n\r\n```python\r\nclass Audio2Text():\r\n    def __init__(self, model_size='large', device = torch.device('cuda:0')):\r\n        self.model_size = model_size\r\n        self.device = device\r\n        self.model = whisper.load_model(model_size, device=device, download_root=DOWNLOAD_ROOT)\r\n```\r\n\r\n在处理视频部分，由于模型默认每次处理30秒视频，需要首先将视频读取为numpy数组，再循环读取30秒片段转为文字，不足30秒的部分进行补齐。\r\n\r\n另外要注意输出文字为繁体中文，可以通过zhconv库统一转换为简体。\r\n\r\n此外本文使用tqdm库添加进度条功能，方便查看视频处理进度。\r\n\r\n```python\r\nfrom whisper.audio import CHUNK_LENGTH, N_SAMPLES\r\nfrom zhconv import convert\r\n```\r\n```python\r\n    def _audio2text(self, path, use_tqdm=True, use_zhconv=True):\r\n        audio = whisper.load_audio(path)\r\n        texts = list()\r\n        end = len(audio) // N_SAMPLES + 1\r\n        if use_tqdm:\r\n            rng = tqdm.tqdm(range(end))\r\n        else:\r\n            rng = range(end)\r\n        for idx in rng:\r\n            clip = audio[idx * N_SAMPLES:min(len(audio), (idx + 1) * N_SAMPLES)]\r\n            clip = whisper.pad_or_trim(clip)\r\n            mel = whisper.log_mel_spectrogram(clip).to(self.model.device)\r\n\r\n            options = whisper.DecodingOptions()\r\n            result = whisper.decode(self.model, mel, options)\r\n            text = result.text\r\n            if use_zhconv:\r\n                text = convert(text, 'zh-hans')\r\n            texts.append(text)\r\n\r\n        return texts\r\n```\r\n\r\n输出部分将每30秒的文字打上时间戳，输出为一行文本，使用datetime实现。\r\n\r\n```python\r\n    def _write_to_file(self, texts, path):\r\n        time = datetime.timedelta()\r\n        with open(path, 'w') as f:\r\n            for text in texts:\r\n                f.write(str(time))\r\n                f.write(text)\r\n                f.write('\\n')\r\n                time += datetime.timedelta(seconds=CHUNK_LENGTH)\r\n```\r\n\r\n最后添加上处理单个视频与整个目录下视频的方法。\r\n\r\n```python\r\n    def transform_file(self, path, use_tqdm=True, use_zhconv=True):\r\n        texts = self._audio2text(path, use_tqdm=use_tqdm, use_zhconv=use_zhconv)\r\n        self._write_to_file(texts, path=\"\".join((path, TEXT_POSTFIX)))\r\n    \r\n    def transform_dir(self, path, use_tqdm=True, use_zhconv=True):\r\n        if use_tqdm:\r\n            rng = tqdm.tqdm(os.listdir(path))\r\n        else:\r\n            rng = os.listdir(path)\r\n        for file in rng:\r\n            if not file.endswith(POSTFIX_EXCLUSIVE):\r\n                self.transform_file(os.path.join(path, file), use_tqdm=False, use_zhconv=use_zhconv)\r\n```\r\n\r\n调用起来比较简单，笔者倾向于使用jupyter notebook进行调用，比较轻便。\r\n\r\n```python\r\na2t = Audio2Text()\r\na2t.transform_dir(path)\r\n```\r\n\r\n## 识别效果\r\n\r\n下面展示一下实际转换的效果，输出大体上相当准确，只是没法很好准确识别说话间隔和专用名词。\r\n```\r\n0:00:00喂喂,听得到吗?听得到听得到,但是那个东西还没有转移到你阿波罗已经安上去了是吧?喂行吧,那我这边听不太清,你打字或者是啥的行吗?或者你直接发微信发给我\r\n0:00:30然后后面你看一下FastLeo里面的一些原理吧你那些原理性的那些东西你先推一遍你帮我推一遍然后整理一个PPT可以吗最近推倒的话\r\n0:01:00最好能有啊哦对对对现在听得到吗能听到能听到你就先整理一个那个Fast Leo的PPT给我吧然后那个转移那个事估计你可能经验不是很多反正我最近我也在搞因为我这边\r\n0:01:30你那边的进度,所以我这边在搞你帮我准备一个PPT吧,好吧846的那个,对吧什么,846的那个原理,原理性的一个PPT准备的稍微详细一点里边的,那种数学原理性的啊,就是数学的,数学的数学,就是数学推导是吗\r\n0:02:00你把那套东西怎么用的,包括怎么搞的,你帮我整理一下,可以吗?好的,好的。\r\n0:02:30所以到时候我们一步一步走,我这边把Rose截了之后再联系你。你先把FastLio的PPT抓紧时间帮我整理一下,谢谢。\r\n```\r\n\r\n当然也会出现一些比较诡异的情况，比如突然识别坏了一整个30秒小段，但下一段又恢复到很准确了。\r\n\r\n```\r\n0:01:30嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯,嗯\r\n0:02:00然后后面的话就是嗯后面的话呃就是像这个地方会稍微降了一点都他他他不是最好的但是就是他这是那个多尺度的一个啊就是弄出来是这样的然后之前不是多尺度的情况下的话就是这两个都是可以超过比如像超过这个比如说这个超过这个可以超过0.9左右\r\n```\r\n\r\n总之用于速览会议内容已经非常靠谱，少量丢失的信息可以打开视频到对应段落去听；而用于关键词检索可能不太理想，需要配合模糊匹配等方法。\r\n\r\n## 资源消耗与效率\r\n\r\nlarge模型对显存要求比较高，笔者一张3080卡显存几乎吃满（~10G），运行时就不能开别的游戏或炼丹了。\r\n\r\n识别速度还算比较快，总长12小时的视频花费了1小时46分钟，平均视频每小时8.8分钟，对于一般的会议时长完全够迅速出记录。\r\n\r\n## 后续改进\r\n\r\n一般使用基本不需要动模型了，也就是改改代码，可以考虑的改进方向主要有实时转换、配合查询等，有条件的话可以压缩下模型、降一下视频采样率实现更快速的识别。",Y="# News Module Is Now Available\r\nYou can find **development news** and other important **announcements** here.",V=[{id:"0",title:"Hello",author:"Honminden",createTime:"2021.07.06",editTime:"2021.07.06",description:"a hello message"},{id:"1",title:"Spring项目搭建踩坑经验",author:"Honminden",createTime:"2021.07.07",editTime:"2021.07.07",description:"总结一下从头开始搭建一个Spring项目过程中踩的一些坑和其它经验。"},{id:"2",title:"如何搭建一个简单的Markdown博客",author:"Honminden",createTime:"2021.07.09",editTime:"2021.07.09",description:"着重讲一下如何使用raw-loader和showdown来导入并转换HTML"},{id:"3",title:"nuScenes数据集-通过命令行下载",author:"Honminden",createTime:"2022.09.07",editTime:"2022.09.07",description:"介绍download-nuscenes"},{id:"4",title:"使用Whisper开源模型提取会议记录",author:"Honminden",createTime:"2023.02.08",editTime:"2023.02.08",description:"通过whisper语音识别实现会议记录生成"}],$=[{id:"90000",title:"News Module Is Now Available",author:"Honminden",createTime:"2021.07.07",editTime:"2021.07.07",description:"You can find development news and other important announcements here."}],Q=new W.a.Converter,Z=function(){function n(){Object(D["a"])(this,n),this.meta=t}return Object(F["a"])(n,[{key:"getArticlesMeta",value:function(){return this.meta.articles}},{key:"getNewsMeta",value:function(){return this.meta.news}},{key:"getRawArticle",value:function(n,r){return this.meta["".concat(n).concat(r)]}},{key:"getMarkdownArticle",value:function(n,r){return this.convertMarkdown2Html(this.getRawArticle(n,r))}},{key:"convertMarkdown2Html",value:function(n){return Q.makeHtml(n)}}]),n}(),nn={name:"Articles",props:["category"],data:function(){return{articleManager:null}},methods:{getMeta:function(){var n;switch(this.category){case"article":n=this.articleManager.getArticlesMeta();break;case"news":n=this.articleManager.getNewsMeta();break}return n}},mounted:function(){this.articleManager=new Z}};e("ee73");const rn=f()(nn,[["render",C],["__scopeId","data-v-21e7ef4d"]]);var en=rn,tn={class:"lab"},an=Object(a["g"])("h2",null,"Lab",-1);function on(n,r,e,t,i,o){return Object(a["p"])(),Object(a["d"])("div",tn,[an])}var cn={name:"Lab"};const sn=f()(cn,[["render",on]]);var ln=sn,dn={class:"about"},un=Object(a["g"])("h2",null,"About",-1);function pn(n,r,e,t,i,o){return Object(a["p"])(),Object(a["d"])("div",dn,[un])}var mn={name:"About"};const bn=f()(mn,[["render",pn]]);var hn=bn,fn={class:"markdownArticles"},gn=Object(a["g"])("div",{id:"docContainer",class:"mt-4 p-2"},null,-1);function vn(n,r,e,t,i,o){return Object(a["p"])(),Object(a["d"])("div",fn,[Object(a["g"])("a",{href:"#",onClick:r[1]||(r[1]=function(r){return n.$router.go(-1)})},"Back"),gn])}var wn={name:"MarkdownArticle",props:["id","category"],data:function(){return{articleManager:null}},mounted:function(){this.articleManager=new Z,document.getElementById("docContainer").innerHTML=this.articleManager.getMarkdownArticle(this.category,this.id)}};e("239f");const jn=f()(wn,[["render",vn]]);var On=jn,yn=[{path:"/",name:"FrontPage",component:x},{path:"/articles/:category",props:!0,name:"Articles",component:en},{path:"/lab",name:"Lab",component:ln},{path:"/about",name:"About",component:hn},{path:"/markdownarticle/:category/:id",props:!0,name:"MarkdownArticle",component:On}],_n=Object(y["a"])({history:Object(y["b"])("/"),routes:yn}),Tn=_n;Object(a["c"])(O).use(Tn).mount("#app")},"7f99":function(n,r,e){},b841:function(n,r,e){},ba49:function(n,r,e){},bcbe:function(n,r,e){},d053:function(n,r,e){"use strict";e("7f99")},ee73:function(n,r,e){"use strict";e("bcbe")},f402:function(n,r,e){"use strict";e("b841")}});
//# sourceMappingURL=app.8f9257d0.js.map